// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String  @unique
  name     String?

  boards Board[]

  @@map("user")
}

model Board {
  id              Int      @id @default(autoincrement())
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  countComponents Int      @default(0)  @map("count_components")

  owner   User @relation(fields: [ownerId], references: [id])
  ownerId Int  @map("owner_id")

  isFavorite Boolean @default(false) @map("is_favorite")
  coverImage String @map("cover_image")
  title       String
  description String

  simulations Simulation[]
  nodes Node[]

  @@map("board")
}

model Simulation {
  id              Int      @id @default(autoincrement())
  iterationCount Int @default(0) @map("iteration_count")
  simulationCount Int @default(0) @map("simulation_count")

  board   Board @relation(fields: [boardId], references: [id])
  boardId Int  @map("board_id")

  simulationResults SimulationResult[] 

  startTime       DateTime @default(now()) @map("start_time")
  endTime       DateTime @updatedAt @map("end_time")

  @@map("simulation")
}

model Node {
  id              Int      @id @default(autoincrement())
  type String
  label String

  board   Board @relation(fields: [boardId], references: [id])
  boardId Int  @map("board_id")
  simulationResults SimulationResult[] 

  @@map("node")
}

model SimulationResult {
  id              Int      @id @default(autoincrement())
  round Int @default(1)
  resources Int @default(1) 

  simulation   Simulation @relation(fields: [simulationId], references: [id])
  simulationId Int  @map("simulation_id")

  node   Node @relation(fields: [nodeId], references: [id])
  nodeId Int  @map("node_id")

  @@map("simulation_result")
}


